<?php


/**
 * Skeleton subclass for performing query and update operations on the 'photos' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Jul 13 11:48:53 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class PhotoPeer extends BasePhotoPeer {
  public static function addEntry($name='', $desc='', $location='', $themeId=null){
    $photo = new Photo();
    $photo->setTitle($name);
    $photo->setDescription($desc);
    $photo->setLocation($location);
		if(!empty($themeId)){
    	$photo->setThemeId((int)$themeId);
		}
    $photo->save();
    return  $photo->getId();
  }

  public static function getRandomPhotos($themeId=null){
    $c = new Criteria();
    $c->setLimit(50);
    $c->add(self::THEME_ID, $themeId);
    $c->addAscendingOrderByColumn('RAND()');
    return self::doSelect($c);
  }

  public static function getPopularPhotos($themeId=null){
    $c = new Criteria();
    $c->setLimit(50);
    $c->add(self::THEME_ID, $themeId);
    $c->addDescendingOrderByColumn(self::COMMENTS);
    $c->addDescendingOrderByColumn(self::VIEWS);
    return self::doSelect($c);
  }
  
	public static function getNewestPhotos($themeId=null){
    $c = new Criteria();
    $c->setLimit(50);
    $c->add(self::THEME_ID, $themeId);
    $c->addDescendingOrderByColumn(self::ID);
    return self::doSelect($c);
  }
} // PhotoPeer
